/*
 * This file is generated by jOOQ.
 */
package tech.yamba.db.jooq.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import tech.yamba.db.jooq.tables.GroupAuthorities;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GroupAuthoritiesRecord extends UpdatableRecordImpl<GroupAuthoritiesRecord> implements Record2<Short, Short> {

    private static final long serialVersionUID = -187901701;

    /**
     * Setter for <code>public.group_authorities.group_id</code>.
     */
    public GroupAuthoritiesRecord setGroupId(Short value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.group_authorities.group_id</code>.
     */
    @NotNull
    public Short getGroupId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>public.group_authorities.authority_id</code>.
     */
    public GroupAuthoritiesRecord setAuthorityId(Short value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.group_authorities.authority_id</code>.
     */
    @NotNull
    public Short getAuthorityId() {
        return (Short) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record2<Short, Short> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Short, Short> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Short, Short> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field1() {
        return GroupAuthorities.GROUP_AUTHORITIES.GROUP_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field2() {
        return GroupAuthorities.GROUP_AUTHORITIES.AUTHORITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component1() {
        return getGroupId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short component2() {
        return getAuthorityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value1() {
        return getGroupId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value2() {
        return getAuthorityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroupAuthoritiesRecord value1(Short value) {
        setGroupId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroupAuthoritiesRecord value2(Short value) {
        setAuthorityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public GroupAuthoritiesRecord values(Short value1, Short value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GroupAuthoritiesRecord
     */
    public GroupAuthoritiesRecord() {
        super(GroupAuthorities.GROUP_AUTHORITIES);
    }

    /**
     * Create a detached, initialised GroupAuthoritiesRecord
     */
    public GroupAuthoritiesRecord(Short groupId, Short authorityId) {
        super(GroupAuthorities.GROUP_AUTHORITIES);

        set(0, groupId);
        set(1, authorityId);
    }
}
