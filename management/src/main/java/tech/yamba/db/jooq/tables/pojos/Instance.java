/*
 * This file is generated by jOOQ.
 */
package tech.yamba.db.jooq.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Instance implements Serializable {

    private static final long serialVersionUID = -573364389;

    private Integer id;
    private Boolean autostart;
    private String  host;
    private Integer port;
    private String  identity;
    private Integer cid;
    private String  name;
    private String  password;

    public Instance() {}

    public Instance(Instance value) {
        this.id = value.id;
        this.autostart = value.autostart;
        this.host = value.host;
        this.port = value.port;
        this.identity = value.identity;
        this.cid = value.cid;
        this.name = value.name;
        this.password = value.password;
    }

    public Instance(
        Integer id,
        Boolean autostart,
        String  host,
        Integer port,
        String  identity,
        Integer cid,
        String  name,
        String  password
    ) {
        this.id = id;
        this.autostart = autostart;
        this.host = host;
        this.port = port;
        this.identity = identity;
        this.cid = cid;
        this.name = name;
        this.password = password;
    }

    public Integer getId() {
        return this.id;
    }

    public Instance setId(Integer id) {
        this.id = id;
        return this;
    }

    @NotNull
    public Boolean getAutostart() {
        return this.autostart;
    }

    public Instance setAutostart(Boolean autostart) {
        this.autostart = autostart;
        return this;
    }

    @NotNull
    @Size(max = 255)
    public String getHost() {
        return this.host;
    }

    public Instance setHost(String host) {
        this.host = host;
        return this;
    }

    public Integer getPort() {
        return this.port;
    }

    public Instance setPort(Integer port) {
        this.port = port;
        return this;
    }

    public String getIdentity() {
        return this.identity;
    }

    public Instance setIdentity(String identity) {
        this.identity = identity;
        return this;
    }

    public Integer getCid() {
        return this.cid;
    }

    public Instance setCid(Integer cid) {
        this.cid = cid;
        return this;
    }

    @NotNull
    @Size(max = 30)
    public String getName() {
        return this.name;
    }

    public Instance setName(String name) {
        this.name = name;
        return this;
    }

    public String getPassword() {
        return this.password;
    }

    public Instance setPassword(String password) {
        this.password = password;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Instance other = (Instance) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (autostart == null) {
            if (other.autostart != null)
                return false;
        }
        else if (!autostart.equals(other.autostart))
            return false;
        if (host == null) {
            if (other.host != null)
                return false;
        }
        else if (!host.equals(other.host))
            return false;
        if (port == null) {
            if (other.port != null)
                return false;
        }
        else if (!port.equals(other.port))
            return false;
        if (identity == null) {
            if (other.identity != null)
                return false;
        }
        else if (!identity.equals(other.identity))
            return false;
        if (cid == null) {
            if (other.cid != null)
                return false;
        }
        else if (!cid.equals(other.cid))
            return false;
        if (name == null) {
            if (other.name != null)
                return false;
        }
        else if (!name.equals(other.name))
            return false;
        if (password == null) {
            if (other.password != null)
                return false;
        }
        else if (!password.equals(other.password))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.autostart == null) ? 0 : this.autostart.hashCode());
        result = prime * result + ((this.host == null) ? 0 : this.host.hashCode());
        result = prime * result + ((this.port == null) ? 0 : this.port.hashCode());
        result = prime * result + ((this.identity == null) ? 0 : this.identity.hashCode());
        result = prime * result + ((this.cid == null) ? 0 : this.cid.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Instance (");

        sb.append(id);
        sb.append(", ").append(autostart);
        sb.append(", ").append(host);
        sb.append(", ").append(port);
        sb.append(", ").append(identity);
        sb.append(", ").append(cid);
        sb.append(", ").append(name);
        sb.append(", ").append(password);

        sb.append(")");
        return sb.toString();
    }
}
