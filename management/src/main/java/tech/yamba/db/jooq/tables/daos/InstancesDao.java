/*
 * This file is generated by jOOQ.
 */
package tech.yamba.db.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import tech.yamba.db.jooq.tables.Instances;
import tech.yamba.db.jooq.tables.pojos.Instance;
import tech.yamba.db.jooq.tables.records.InstancesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class InstancesDao extends DAOImpl<InstancesRecord, Instance, Integer> {

    /**
     * Create a new InstancesDao without any configuration
     */
    public InstancesDao() {
        super(Instances.INSTANCES, Instance.class);
    }

    /**
     * Create a new InstancesDao with an attached configuration
     */
    @Autowired
    public InstancesDao(Configuration configuration) {
        super(Instances.INSTANCES, Instance.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(Instance object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<Instance> fetchById(Integer... values) {
        return fetch(Instances.INSTANCES.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Instance fetchOneById(Integer value) {
        return fetchOne(Instances.INSTANCES.ID, value);
    }

    /**
     * Fetch records that have <code>autostart IN (values)</code>
     */
    public List<Instance> fetchByAutostart(Boolean... values) {
        return fetch(Instances.INSTANCES.AUTOSTART, values);
    }

    /**
     * Fetch records that have <code>host IN (values)</code>
     */
    public List<Instance> fetchByHost(String... values) {
        return fetch(Instances.INSTANCES.HOST, values);
    }

    /**
     * Fetch records that have <code>port IN (values)</code>
     */
    public List<Instance> fetchByPort(Integer... values) {
        return fetch(Instances.INSTANCES.PORT, values);
    }

    /**
     * Fetch records that have <code>identity IN (values)</code>
     */
    public List<Instance> fetchByIdentity(String... values) {
        return fetch(Instances.INSTANCES.IDENTITY, values);
    }

    /**
     * Fetch records that have <code>cid IN (values)</code>
     */
    public List<Instance> fetchByCid(Integer... values) {
        return fetch(Instances.INSTANCES.CID, values);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<Instance> fetchByName(String... values) {
        return fetch(Instances.INSTANCES.NAME, values);
    }

    /**
     * Fetch records that have <code>password IN (values)</code>
     */
    public List<Instance> fetchByPassword(String... values) {
        return fetch(Instances.INSTANCES.PASSWORD, values);
    }
}
