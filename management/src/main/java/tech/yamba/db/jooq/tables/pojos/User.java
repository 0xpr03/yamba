/*
 * This file is generated by jOOQ.
 */
package tech.yamba.db.jooq.tables.pojos;


import java.io.Serializable;
import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.9"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class User implements Serializable {

    private static final long serialVersionUID = -933466680;

    private Short     id;
    private String    username;
    private Boolean   enabled;
    private String    password;
    private Timestamp created;

    public User() {}

    public User(User value) {
        this.id = value.id;
        this.username = value.username;
        this.enabled = value.enabled;
        this.password = value.password;
        this.created = value.created;
    }

    public User(
        Short     id,
        String    username,
        Boolean   enabled,
        String    password,
        Timestamp created
    ) {
        this.id = id;
        this.username = username;
        this.enabled = enabled;
        this.password = password;
        this.created = created;
    }

    public Short getId() {
        return this.id;
    }

    public User setId(Short id) {
        this.id = id;
        return this;
    }

    @NotNull
    @Size(max = 255)
    public String getUsername() {
        return this.username;
    }

    public User setUsername(String username) {
        this.username = username;
        return this;
    }

    public Boolean getEnabled() {
        return this.enabled;
    }

    public User setEnabled(Boolean enabled) {
        this.enabled = enabled;
        return this;
    }

    @NotNull
    @Size(max = 60)
    public String getPassword() {
        return this.password;
    }

    public User setPassword(String password) {
        this.password = password;
        return this;
    }

    public Timestamp getCreated() {
        return this.created;
    }

    public User setCreated(Timestamp created) {
        this.created = created;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final User other = (User) obj;
        if (id == null) {
            if (other.id != null)
                return false;
        }
        else if (!id.equals(other.id))
            return false;
        if (username == null) {
            if (other.username != null)
                return false;
        }
        else if (!username.equals(other.username))
            return false;
        if (enabled == null) {
            if (other.enabled != null)
                return false;
        }
        else if (!enabled.equals(other.enabled))
            return false;
        if (password == null) {
            if (other.password != null)
                return false;
        }
        else if (!password.equals(other.password))
            return false;
        if (created == null) {
            if (other.created != null)
                return false;
        }
        else if (!created.equals(other.created))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.username == null) ? 0 : this.username.hashCode());
        result = prime * result + ((this.enabled == null) ? 0 : this.enabled.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.created == null) ? 0 : this.created.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("User (");

        sb.append(id);
        sb.append(", ").append(username);
        sb.append(", ").append(enabled);
        sb.append(", ").append(password);
        sb.append(", ").append(created);

        sb.append(")");
        return sb.toString();
    }
}
